<#@ template language="C#" inherits="LightNap.Scaffolding.Templates.BaseTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

import { inject, Injectable } from "@angular/core";
import { Create<#= Parameters.PascalName #>Request } from "../models/request/create-<#= Parameters.KebabName #>-request";
import { Search<#= Parameters.PascalNamePlural #>Request } from "../models/request/search-<#= Parameters.KebabNamePlural #>-request";
import { Update<#= Parameters.PascalName #>Request } from "../models/request/update-<#= Parameters.KebabName #>-request";
import { DataService } from "./data.service";

@Injectable({
  providedIn: "root",
})
export class <#= Parameters.PascalName #>Service {
  #dataService = inject(DataService);

    get<#= Parameters.PascalName #>(<#= Parameters.IdProperty.CamelName #>: <#= Parameters.IdProperty.FrontEndType #>) {
        return this.#dataService.get<#= Parameters.PascalName #>(<#= Parameters.IdProperty.CamelName #>);
    }

    search<#= Parameters.PascalNamePlural #>(request: Search<#= Parameters.PascalNamePlural #>Request) {
        return this.#dataService.search<#= Parameters.PascalNamePlural #>(request);
    }

    create<#= Parameters.PascalName #>(request: Create<#= Parameters.PascalName #>Request) {
        return this.#dataService.create<#= Parameters.PascalName #>(request);
    }

    update<#= Parameters.PascalName #>(<#= Parameters.IdProperty.CamelName #>: <#= Parameters.IdProperty.FrontEndType #>, request: Update<#= Parameters.PascalName #>Request) {
        return this.#dataService.update<#= Parameters.PascalName #>(id, request);
    }

    delete<#= Parameters.PascalName #>(<#= Parameters.IdProperty.CamelName #>: <#= Parameters.IdProperty.FrontEndType #>) {
        return this.#dataService.delete<#= Parameters.PascalName #>(<#= Parameters.IdProperty.CamelName #>);
    }
}
